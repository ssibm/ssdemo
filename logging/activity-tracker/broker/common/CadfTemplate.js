/*
Template for CADF events in Activity Tracker.

Based on the CADF standard: http://www.dmtf.org/sites/default/files/standards/documents/DSP0262_1.0.0.pdf
CADF = Cloud Auditing Data Federation. This model for events is suitable for auditing.

The CADF event model requires 5 components. For Activity Tracker, these translate into:
1. observer: always Activity Tracker
2. initiator: an end user, or an internal (IBM) or external service
3. action: the activity that the initiator is performing, such as calling a REST API
4. target: the IBM service that the action is performed against
5. outcome: the result of the action; "success" or "failure"

The JSON fields that support the above components are designated "REQUIRED".
Additional fields are available as needed, and these are designated "optional".
Optional fields can be omitted or set to null.
Fields you should skip are commented out; AT will handle them.

The observer, intiator, and target each require an id and a typeURI. The id
should include an instance id if possible. Use CRN when possible, specified here:
  https://github.ibm.com/ibmcloud/builders-guide/blob/master/specifications/crn/CRN.md
The typeURI should be of the form:
  observer.typeURI = "service/security/edge/activity-tracker"
Consider using the CRN segments “:resource-type:resource” in the typeURI.

*/

// You can use this method to make a template; for example,to see what it looks like
// in Kibana. However, normally you will copy and paste the CADF structure, and
// then edit it.
exports.makeCADF = () => {
  let cadf = {
    "payload": {
      "outcome": "REQUIRED: Either 'success' or 'failure'. For example, an HTTP response code of 200 would be 'success'.",
      // "typeURI": "http://schemas.dmtf.org/cloud/audit/1.0/event",
      // "eventType": "activity", // Always "activity" for AT. (Other CADF values are "monitor" and "control".)
      "eventTime": (new Date()).toISOString(), // REQUIRED
      "action": "REQUIRED: The activity of this request, for example: 'security.user.create'",
      // "id": "optional: the uuid of this event. Can be generated by the service",
      "initiator": {
        // The initiator should be the end user, if available.
        // Otherwise refer to the browser or ftp server or other service that the event comes through.
        "id": "REQUIRED: An id for the source of the event, such as an IBMID. Can be null.",
        "name": "Human-readable name for the source of the event, without using customer information. Can be null.",
        "typeURI": "REQUIRED: Type of the source of the event. For example, security/account/user.",
        "host": {
          // "agent": "optional: the client that was used to send the request. For example, 'python-neutronclient' or browser info",
          // "address": "optional: the initiator's IP address"
        },
        "credential": {
          "type": "REQUIRED: token, user, or apikey."
        }
      },
      "target": {
        "id": "REQUIRED: id of the target service. CRN is required if applicable.",
        "name": "optional: human-readable name of the target service.",
        "typeURI": "REQUIRED: Type of the target of the event. For example, compute/server",
        "host": {
          // "address": "optional: the IP Address or URL of the target service. For example, xxx.bluemix.net"
        }
      },
      // "observer": {
      //   "name": "ActivityTracker", // always AT
      //   "id": "activitytracker.ng.bluemix.net", // Should be a CRN
      //   "typeURI": "security/edge/activity-tracker" // always the same
      // },
      "reason": {
        "reasonCode": "optional but recommended if applicable: the HTTP response code. For example, 200 for success.",
        // reasonCode must be numeric. Use responseData (below) to contain other types of return codes.
        "reasonType": "https://www.iana.org/assignments/http-status-codes/http-status-codes.xml" // optional, if reasonCode is given
      },

      // The following fields are not part of CADF, and are optional--but generally recommended.
      // Be sure not to put any sensitive data in the following fields.
      "requestData": "", // Typically JSON request parameters, from URL or body
      "responseData": "" // Typically for JSON response.
    }
  };

  return cadf;
};
